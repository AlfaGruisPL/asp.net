// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zpnet.Models;

#nullable disable

namespace zpnet.Migrations
{
    [DbContext(typeof(zpnetContext))]
    [Migration("20230128155302_start2")]
    partial class start2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("elementkategoria", b =>
                {
                    b.Property<int>("elementyid")
                        .HasColumnType("int");

                    b.Property<int>("kategorieid")
                        .HasColumnType("int");

                    b.HasKey("elementyid", "kategorieid");

                    b.HasIndex("kategorieid");

                    b.ToTable("elementkategoria");
                });

            modelBuilder.Entity("zpnet.Models.element", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("Data_stworzenia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("miejsceId")
                        .HasColumnType("int");

                    b.Property<string>("nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("miejsceId");

                    b.ToTable("elementy");
                });

            modelBuilder.Entity("zpnet.Models.kategoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("kategorie");
                });

            modelBuilder.Entity("zpnet.Models.miejsce", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("miejsca");
                });

            modelBuilder.Entity("elementkategoria", b =>
                {
                    b.HasOne("zpnet.Models.element", null)
                        .WithMany()
                        .HasForeignKey("elementyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zpnet.Models.kategoria", null)
                        .WithMany()
                        .HasForeignKey("kategorieid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("zpnet.Models.element", b =>
                {
                    b.HasOne("zpnet.Models.miejsce", "miejsce")
                        .WithMany()
                        .HasForeignKey("miejsceId");

                    b.Navigation("miejsce");
                });
#pragma warning restore 612, 618
        }
    }
}
